#pragma once
#include"Serial_port.h"

class Controller_Kinco:public Serial_port
{
private:
	BYTE mode[10] = { 0x01, 0x2F, 0x60, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F };
	BYTE enable[10] = { 0x01, 0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x25 };
	BYTE position[10] = { 0x01, 0x23, 0x7A, 0x60, 0x00, 0x50, 0xC3, 0x00, 0x00, 0xEF };
	BYTE stop[10] = { 0x01, 0x2B, 0x40, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2E };
	BYTE speed[10] = { 0x01, 0x23, 0x81, 0x60, 0x00, 0x55, 0x55, 0x08, 0x00, 0x49 };
	BYTE start_1[10] = { 0x01, 0x2B, 0x40, 0x60, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x05 };
	BYTE start_2[10] = { 0x01, 0x2B, 0x40, 0x60, 0x00, 0x3F, 0x00, 0x00, 0x00, 0xF5 };
	BYTE continuous_operation[10] = { 0x01, 0x2B, 0x40, 0x60, 0x00, 0x3F, 0x10, 0x00, 0x00, 0xE5 };

public:
	double angle_data = 0;
	double* angle = NULL;

	Controller_Kinco(string port_num, int Baud_rate) :Serial_port(port_num, Baud_rate) {};
	virtual ~Controller_Kinco() {};
	bool Mode(int num, int mode);
	bool Enable(int num);
	bool Position(int num, double position);
	bool Speed(int num, float speed);
	bool Stop(int num);
	bool Start(int num);
	bool Continuous_operation(int num);
	void main_process();
};

